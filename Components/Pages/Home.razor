@page "/"
@using CountryPopulationVisualisation.Models
@using CountryPopulationVisualisation.Services
@inject CountryService CountryService
@rendermode InteractiveServer

<PageTitle>Home</PageTitle>

@if (countries == null)
{
    <p><em>Loading....</em></p>
}
else
{
    <div class="">
        <div class="row justify-content-between w-100 d-flex">
            <div class="col">
                <h1>Countries</h1>
            </div>
            <div class="col row justify-content-end">
                <div class="col-3">
                    <select class="form-select" aria-label="Default select example" @bind="year">
                        <option selected value="2018">2018</option>
                        @for (int i = 2017; i >= 1961; i--)
                        {
                            <option value="@i">@i</option>
                        }
                    </select>
                </div>
                <div class="col-auto">
                    <button class="btn btn-primary" @onclick="ChangeYear">
                        change year
                    </button>
                </div>
            </div>
        </div>
    </div>

    <table
        class="table table-bordered table-striped">
        <thead>
        <tr>
            <th scope="col">Flag</th>
            <th scope="col">
                <button @onclick="ToggleNameSort" class="btn p-0 m-0 w-100 h-100 text-start">
                    @if (currentSort == "name")
                    {
                        @if (SortByName == "asc")
                        {
                            <i class="bi bi-caret-up-fill p-2"></i>
                        }
                        else
                        {
                            <i class="bi bi-caret-down-fill p-2"></i>
                        }
                    }
                    <b>Name</b>
                </button>
            </th>
            <th scope="col">
                <button @onclick="TogglePopulationSort" class="btn p-0 m-0 w-100 h-100 text-start">
                    @if (currentSort == "population")
                    {
                        @if (SortByPopulation == "asc")
                        {
                            <i class="bi bi-caret-up-fill p-2"></i>
                        }
                        else
                        {
                            <i class="bi bi-caret-down-fill p-2"></i>
                        }
                    }
                    <b>Population</b>
                </button>
            </th>
            <th scope="col"><button @onclick="ToggleCapitalSort" class="btn p-0 m-0 w-100 h-100 text-start">
                @if (currentSort == "capital")
                {
                    @if (SortByCapital == "asc")
                    {
                        <i class="bi bi-caret-up-fill p-2"></i>
                    }
                    else
                    {
                        <i class="bi bi-caret-down-fill p-2"></i>
                    }
                }
                <b>Capital</b>
            </button></th>
        </tr>
        </thead>
        <tbody>
        @foreach (var country in countries)
        {
            <tr>
                <td>
                    @if (country.flagLocation == null)
                    {
                        <i>Flag not provided</i>
                    }
                    else
                    {
                        <img src="@country.flagLocation" alt="@country.name" width="100" height="50"/>
                    }
                </td>
                <td>@country.name</td>
                <td>@if (country.population != 0)
                    {
                        @country.population
                    }
                    else
                    {
                        <i>Dataset did not provide population for this period</i>
                    }
                </td>
                <td>@country.capital</td>
            </tr>
        }
        </tbody>
    </table>
}

@code{

    private IEnumerable<CountryModel>? countries;

    private int year = 2018;

    private string SortByName = "asc";
    private string SortByPopulation = "asc";
    private string SortByCapital = "asc";
    private string currentSort = "name";

    protected override async Task OnInitializedAsync()
    {
        countries = await CountryService.GetCountries();
        StateHasChanged();
    }

    private void ToggleNameSort()
    {
        if (SortByName == "asc")
        {
            countries = countries.OrderByDescending(x => x.name);
            SortByName = "desc";
        }
        else
        {
            countries = countries.OrderBy(x => x.name);
            SortByName = "asc";
        }
        currentSort = "name";
    }

    private void ToggleCapitalSort()
    {

        if (SortByCapital == "asc")
        {
            countries = countries.OrderByDescending(x => x.capital);
            SortByCapital = "desc";
        }
        else
        {
            countries = countries.OrderBy(x => x.capital);
            SortByCapital = "asc";
        }
        currentSort = "capital";
    }

    private void TogglePopulationSort()
    {
        if (SortByPopulation == "asc")
        {
            countries = countries.OrderByDescending(x => x.population);
            SortByPopulation = "desc";
        }
        else
        {
            countries = countries.OrderBy(x => x.population);
            SortByPopulation = "asc";
        }
        currentSort = "population";
    }

    private async void ChangeYear()
    {
        // update list with corresponding year
        countries = await CountryService.UpdateYearsForCountries(countries.ToList(), year);
        // update order of list to match the new data
        if (currentSort == "name")
        {
            ToggleNameSort();
            ToggleNameSort();
        }
        else if (currentSort == "population")
        {
            TogglePopulationSort();
            TogglePopulationSort();
        }
        else
        {
            ToggleCapitalSort();
            ToggleCapitalSort();
        }
        StateHasChanged();
    }

}